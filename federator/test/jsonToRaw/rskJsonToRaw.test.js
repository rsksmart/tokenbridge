const expect = require('chai').expect;
const ethUtils = require('ethereumjs-util');

const rskJsonToRaw = require('../../src/lib/jsonToRaw/rskJsonToRaw.js');

describe('rskJsonToRaw tests', () => {
    //Values obtained from testnet Tx 0xa636cbd79d6c94cd0c68ad90b6a90df0dbe610f0ad1fe643c8f07a12f332137d

    it('creates Raw rlp encoded Block', async () => {
        const BlockHeader = { 
            number: 131925,
            hash: '0x79c54f2563c22ff3673415087a7679adfa2c5f15a216e71e90601e1ca753f219',
            parentHash: '0x3334efbd514c274bce5fc5be95215ba259e47c67d85193367315e32f6a4056e2',
            sha3Uncles: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347',
            logsBloom: '0x
            transactionsRoot: '0x0b0d510c141b3d883eb29fc8b4602108968a0ca1a417d65292c81460a3a8ca50',
            stateRoot: '0x00772ea8c3b1038126fabb43928f1b24633547d6d1256f6c392924933feeb025',
            receiptsRoot: '0xa1fbeb06a8181596e79aff36a3671ff3e506659d4b2953b157824a503fa85f37',
            miner: '0x42C0444F96F2716C0b77548ACa74Ec32A00aEB8D',
            difficulty: '423484912534602',
            totalDifficulty: '11761856316565426264',
            extraData: '0x00',
            size: 1050,
            gasLimit: 6800000,
            gasUsed: 101672,
            timestamp: 1566252081,
            transactions: 
             [ '0xa636cbd79d6c94cd0c68ad90b6a90df0dbe610f0ad1fe643c8f07a12f332137d',
               '0x4942664dda4ec02400fe22cf42ceca48fd732e58da60138683d8aaff3a25873c' ],
            uncles: [],
            minimumGasPrice: '0x387ee40',
            bitcoinMergedMiningHeader: '0x00008020332a7135f993b5e6710934f4be6f51fa65fa68f85ddff0def2020000000000009ad29cc7781bd54cd5ac45450f867d8eec4afaa728dd2cbc2f3392a62ef74498581c5b5d9c50041a5d6a4b71',
            bitcoinMergedMiningCoinbaseTransaction: '0x00000000000000804a2ac3f6cf9598c4e1c0831ccf56dd7850a42611f0ea8703e8507cfbcf453d351e0000ffffffff029e19a804000000001976a9142f7cef80ce45daf961454f47831c59b2f7ddfd0388ac00000000000000002b6a2952534b424c4f434b3a701cb103bc3262964adef27be3d6c8714b18a6d0673b5585d4b862010002035500000000',
            bitcoinMergedMiningMerkleProof: '0x93368281ba0407b622845d7b1bb8c76f12b8747f994449255e67b1aecbcc351a',
            hashForMergedMining: '0x701cb103bc3262964adef27be3d6c8714b18a6d0673b5585d4b8620100020355',
            paidFees: '0x61a6025b400'
        };
        const rlpEncodedBlockHeader = rskJsonToRaw.getRawBlockHeader(BlockHeader);
        expect(ethUtils.bufferToHex(ethUtils.keccak256(rlpEncodedBlockHeader))).to.equal(BlockHeader.hash);
    });

    it('creates Raw rlp encoded Tx', async () => {
        const tx = { 
            hash: '0xa636cbd79d6c94cd0c68ad90b6a90df0dbe610f0ad1fe643c8f07a12f332137d',
            nonce: 23,
            blockHash: '0x79c54f2563c22ff3673415087a7679adfa2c5f15a216e71e90601e1ca753f219',
            blockNumber: 131925,
            transactionIndex: 0,
            from: '0x170346689cC312D8E19959Bc68c3AD03E72C9850',
            to: '0x30797cFD6644291D7bC5456Ace8480275505fCea',
            gas: 6800000,
            gasPrice: '66000000',
            value: '0',
            input: '0x6bcab28b0000000000000000000000000000000000000000000000000000000000c5770799ce25349edf9f80a16392fbc5cbcc43101c6d3826339d1383edd3f49e3335b13e67563b4ac9d52921d9b514664df0caf981ea87bd911edf902b59de4175185a000000000000000000000000170346689cc312d8e19959bc68c3ad03e72c98500000000000000000000000000000000000000000000000000de0b6b3a7640000',
            v: '0x1b',
            r: '0xc7908847a7ce9d7cfafcc3e269067502ec06cfa8d2206df7a759e01138a9c241',
            s: '0x7f38f855ea9768bc22d8c87abda6b4093d2d3e3e8f0d055ead43b0878e8b9e45' 
        };
        const rlpEncodedTx = rskJsonToRaw.getRawTransaction(tx);
        expect(ethUtils.bufferToHex(ethUtils.keccak256(rlpEncodedTx))).to.equal(tx.hash);
    });

    it('creates Raw rlp encoded Tx Receipt', async () => {
        const txReceipt = { transactionHash: '0xa636cbd79d6c94cd0c68ad90b6a90df0dbe610f0ad1fe643c8f07a12f332137d',
            transactionIndex: 0,
            blockHash: '0x79c54f2563c22ff3673415087a7679adfa2c5f15a216e71e90601e1ca753f219',
            blockNumber: 131925,
            cumulativeGasUsed: 101672,
            gasUsed: 101672,
            contractAddress: null,
            logs: 
            [ { logIndex: 0,
                blockNumber: 131925,
                blockHash: '0x79c54f2563c22ff3673415087a7679adfa2c5f15a216e71e90601e1ca753f219',
                transactionHash: '0xa636cbd79d6c94cd0c68ad90b6a90df0dbe610f0ad1fe643c8f07a12f332137d',
                transactionIndex: 0,
                address: '0x5A323A9c4C0Fd6a521426dd0EbCeD8318a9835eb',
                data: '0x0000000000000000000000000000000000000000000000000de0b6b3a7640000',
                topics:
                [ '0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef',
                  '0x0000000000000000000000002cf9ae9947538119afd0a246d3ac87dcc8112e05',
                  '0x000000000000000000000000170346689cc312d8e19959bc68c3ad03e72c9850' ],
                id: 'log_b2ddaf7f' } ],
            from: '0x170346689cc312d8e19959bc68c3ad03e72c9850',
            to: '0x30797cfd6644291d7bc5456ace8480275505fcea',
            root: '0x01',
            status: true,
            logsBloom: '0x
        };
        const rlpEncodedTx = rskJsonToRaw.getRawTransactionReceipt(txReceipt);

        let expectedResult = "0xf901ac0183018d28bf89df89b945a323a9c4c0fd6a521426dd0ebced8318a9835ebf863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa00000000000000000000000002cf9ae9947538119afd0a246d3ac87dcc8112e05a0000000000000000000000000170346689cc312d8e19959bc68c3ad03e72c9850a00000000000000000000000000000000000000000000000000de0b6b3a764000083018d2801";
        expect(ethUtils.bufferToHex(rlpEncodedTx)).to.equal(expectedResult);
    });
    
});
