{
  "address": "0x3f1e3e613FE9e8f1817677152DDDeE7504B19959",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        }
      ],
      "name": "AllowedTokenRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_smallAmountConfirmations",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_mediumAmountConfirmations",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_largeAmountConfirmations",
          "type": "uint256"
        }
      ],
      "name": "ConfirmationsChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "PrimaryTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_typeId",
          "type": "uint256"
        }
      ],
      "name": "SetToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_typeId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_typeDescription",
          "type": "string"
        }
      ],
      "name": "TokenTypeAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_typeId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "min",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "max",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "daily",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "mediumAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "largeAmount",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct IAllowTokens.Limits",
          "name": "limits",
          "type": "tuple"
        }
      ],
      "name": "TypeLimitsChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_lastDay",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_spentToday",
          "type": "uint256"
        }
      ],
      "name": "UpdateTokensTransfered",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MAX_TYPES",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "__Secondary_init",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "min",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "max",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "daily",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "mediumAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "largeAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct IAllowTokens.Limits",
          "name": "limits",
          "type": "tuple"
        }
      ],
      "name": "addTokenType",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "len",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowedTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "typeId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "spentToday",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastDay",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "calcMaxWithdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "maxWithdraw",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getConfirmations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "smallAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "mediumAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "largeAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "getInfoAndLimits",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "allowed",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "typeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "spentToday",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastDay",
              "type": "uint256"
            }
          ],
          "internalType": "struct IAllowTokens.TokenInfo",
          "name": "info",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "min",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "max",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "daily",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "mediumAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "largeAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct IAllowTokens.Limits",
          "name": "limit",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTypeDescriptions",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "descriptions",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTypeDescriptionsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTypesLimits",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "min",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "max",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "daily",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "mediumAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "largeAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct IAllowTokens.Limits[]",
          "name": "limits",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_manager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_primary",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_smallAmountConfirmations",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_mediumAmountConfirmations",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_largeAmountConfirmations",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "min",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "max",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "daily",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "mediumAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "largeAmount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct IAllowTokens.Limits",
              "name": "limits",
              "type": "tuple"
            }
          ],
          "internalType": "struct IAllowTokens.TypeInfo[]",
          "name": "typesInfo",
          "type": "tuple[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "isTokenAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "largeAmountConfirmations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mediumAmountConfirmations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "primary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "removeAllowedToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_smallAmountConfirmations",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_mediumAmountConfirmations",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_largeAmountConfirmations",
          "type": "uint256"
        }
      ],
      "name": "setConfirmations",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "typeId",
              "type": "uint256"
            }
          ],
          "internalType": "struct IAllowTokens.TokensAndType[]",
          "name": "tokensAndTypes",
          "type": "tuple[]"
        }
      ],
      "name": "setMultipleTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "typeId",
          "type": "uint256"
        }
      ],
      "name": "setToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "allowed",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "typeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "spentToday",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastDay",
              "type": "uint256"
            }
          ],
          "internalType": "struct IAllowTokens.TokenInfo",
          "name": "info",
          "type": "tuple"
        }
      ],
      "name": "setTokenInfoByTokenAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "typeId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "min",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "max",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "daily",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "mediumAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "largeAmount",
              "type": "uint256"
            }
          ],
          "internalType": "struct IAllowTokens.Limits",
          "name": "limits",
          "type": "tuple"
        }
      ],
      "name": "setTypeLimits",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "smallAmountConfirmations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "tokenInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "allowed",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "typeId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "spentToday",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastDay",
              "type": "uint256"
            }
          ],
          "internalType": "struct IAllowTokens.TokenInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "transferPrimary",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "typeDescriptions",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "typeLimits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "min",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "max",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "daily",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "mediumAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "largeAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "updateTokenTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0xe94cba527ce280dc27a03f8cb6b1616f8e78b75c84d1e0e5b1a64cd8cae0d17d",
  "receipt": {
    "to": null,
    "from": "0x9C95B0EF2D3E1D9ca479524Ba738C87BE28C1585",
    "contractAddress": "0x3f1e3e613FE9e8f1817677152DDDeE7504B19959",
    "transactionIndex": 7,
    "gasUsed": "2092786",
    "logsBloom": "0x
    "blockHash": "0x65c5ee6a97322fc9061d94faede8fba52f8941009f305eb43f4970650b06a431",
    "transactionHash": "0xe94cba527ce280dc27a03f8cb6b1616f8e78b75c84d1e0e5b1a64cd8cae0d17d",
    "logs": [],
    "blockNumber": 16645768,
    "cumulativeGasUsed": "2996799",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "f27c8e19ddc2cd2a95162a1eabc0e272",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"AllowedTokenRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_smallAmountConfirmations\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_mediumAmountConfirmations\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_largeAmountConfirmations\",\"type\":\"uint256\"}],\"name\":\"ConfirmationsChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"PrimaryTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_typeId\",\"type\":\"uint256\"}],\"name\":\"SetToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_typeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_typeDescription\",\"type\":\"string\"}],\"name\":\"TokenTypeAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_typeId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"daily\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mediumAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"largeAmount\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct IAllowTokens.Limits\",\"name\":\"limits\",\"type\":\"tuple\"}],\"name\":\"TypeLimitsChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_lastDay\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_spentToday\",\"type\":\"uint256\"}],\"name\":\"UpdateTokensTransfered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_TYPES\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"__Secondary_init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"daily\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mediumAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"largeAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct IAllowTokens.Limits\",\"name\":\"limits\",\"type\":\"tuple\"}],\"name\":\"addTokenType\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"len\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"typeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spentToday\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastDay\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"calcMaxWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxWithdraw\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getConfirmations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"smallAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mediumAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"largeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"getInfoAndLimits\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"typeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spentToday\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastDay\",\"type\":\"uint256\"}],\"internalType\":\"struct IAllowTokens.TokenInfo\",\"name\":\"info\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"daily\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mediumAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"largeAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct IAllowTokens.Limits\",\"name\":\"limit\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTypeDescriptions\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"descriptions\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTypeDescriptionsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTypesLimits\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"daily\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mediumAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"largeAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct IAllowTokens.Limits[]\",\"name\":\"limits\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_primary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_smallAmountConfirmations\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mediumAmountConfirmations\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_largeAmountConfirmations\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"daily\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mediumAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"largeAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct IAllowTokens.Limits\",\"name\":\"limits\",\"type\":\"tuple\"}],\"internalType\":\"struct IAllowTokens.TypeInfo[]\",\"name\":\"typesInfo\",\"type\":\"tuple[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isTokenAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"largeAmountConfirmations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mediumAmountConfirmations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"primary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"removeAllowedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_smallAmountConfirmations\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_mediumAmountConfirmations\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_largeAmountConfirmations\",\"type\":\"uint256\"}],\"name\":\"setConfirmations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"typeId\",\"type\":\"uint256\"}],\"internalType\":\"struct IAllowTokens.TokensAndType[]\",\"name\":\"tokensAndTypes\",\"type\":\"tuple[]\"}],\"name\":\"setMultipleTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"typeId\",\"type\":\"uint256\"}],\"name\":\"setToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"typeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spentToday\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastDay\",\"type\":\"uint256\"}],\"internalType\":\"struct IAllowTokens.TokenInfo\",\"name\":\"info\",\"type\":\"tuple\"}],\"name\":\"setTokenInfoByTokenAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"typeId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"daily\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mediumAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"largeAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct IAllowTokens.Limits\",\"name\":\"limits\",\"type\":\"tuple\"}],\"name\":\"setTypeLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"smallAmountConfirmations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"tokenInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"typeId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spentToday\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastDay\",\"type\":\"uint256\"}],\"internalType\":\"struct IAllowTokens.TokenInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferPrimary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"typeDescriptions\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"typeLimits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"daily\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mediumAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"largeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"updateTokenTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"__Secondary_init(address)\":{\"details\":\"Sets the primary account to the one that is creating the Secondary contract.\"},\"initialize(address)\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"primary()\":{\"returns\":{\"_0\":\"the address of the primary.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"transferPrimary(address)\":{\"details\":\"Transfers contract to a new primary.\",\"params\":{\"recipient\":\"The address of new primary.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AllowTokens/AllowTokens.sol\":\"AllowTokens\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/AllowTokens/AllowTokens.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\npragma abicoder v2;\\n\\nimport \\\"../zeppelin/math/SafeMath.sol\\\";\\n// Upgradables\\nimport \\\"../zeppelin/upgradable/Initializable.sol\\\";\\nimport \\\"../zeppelin/upgradable/ownership/UpgradableOwnable.sol\\\";\\nimport \\\"../zeppelin/upgradable/ownership/UpgradableSecondary.sol\\\";\\n\\nimport \\\"../interface/IAllowTokens.sol\\\";\\n\\ncontract AllowTokens is Initializable, UpgradableOwnable, UpgradableSecondary, IAllowTokens {\\n\\tusing SafeMath for uint256;\\n\\n\\taddress constant private NULL_ADDRESS = address(0);\\n\\tuint256 constant public MAX_TYPES = 250;\\n\\tmapping (address => TokenInfo) public allowedTokens;\\n\\tmapping (uint256 => Limits) public typeLimits;\\n\\tuint256 public smallAmountConfirmations;\\n\\tuint256 public mediumAmountConfirmations;\\n\\tuint256 public largeAmountConfirmations;\\n\\tstring[] public typeDescriptions;\\n\\n\\tevent SetToken(address indexed _tokenAddress, uint256 _typeId);\\n\\tevent AllowedTokenRemoved(address indexed _tokenAddress);\\n\\tevent TokenTypeAdded(uint256 indexed _typeId, string _typeDescription);\\n\\tevent TypeLimitsChanged(uint256 indexed _typeId, Limits limits);\\n\\tevent UpdateTokensTransfered(address indexed _tokenAddress, uint256 _lastDay, uint256 _spentToday);\\n\\tevent ConfirmationsChanged(uint256 _smallAmountConfirmations, uint256 _mediumAmountConfirmations, uint256 _largeAmountConfirmations);\\n\\n\\tmodifier notNull(address _address) {\\n\\t\\trequire(_address != NULL_ADDRESS, \\\"AllowTokens: Null Address\\\");\\n\\t\\t_;\\n\\t}\\n\\n\\tfunction initialize(\\n\\t\\taddress _manager,\\n\\t\\taddress _primary,\\n\\t\\tuint256 _smallAmountConfirmations,\\n\\t\\tuint256 _mediumAmountConfirmations,\\n\\t\\tuint256 _largeAmountConfirmations,\\n\\t\\tTypeInfo[] memory typesInfo) public initializer {\\n\\t\\tUpgradableOwnable.initialize(_manager);\\n\\t\\tUpgradableSecondary.__Secondary_init(_primary);\\n\\t\\t_setConfirmations(_smallAmountConfirmations, _mediumAmountConfirmations, _largeAmountConfirmations);\\n\\t\\tfor(uint i = 0; i < typesInfo.length; i = i + 1) {\\n\\t\\t\\t_addTokenType(typesInfo[i].description, typesInfo[i].limits);\\n\\t\\t}\\n\\t}\\n\\n\\tfunction version() override external pure returns (string memory) {\\n\\t\\treturn \\\"v1\\\";\\n\\t}\\n\\n\\tfunction tokenInfo(address tokenAddress) public view returns(TokenInfo memory) {\\n\\t\\treturn allowedTokens[tokenAddress];\\n\\t}\\n\\n\\tfunction setTokenInfoByTokenAddress(address tokenAddress, TokenInfo memory info) public {\\n\\t\\trequire(isOwner() || _msgSender() == primary(), \\\"AllowTokens: unauthorized sender\\\");\\n\\t\\tallowedTokens[tokenAddress] = info;\\n\\t}\\n\\n\\tfunction getInfoAndLimits(\\n\\t\\taddress tokenAddress\\n\\t) public view override returns (\\n\\t\\tTokenInfo memory info,\\n\\t\\tLimits memory limit\\n\\t) {\\n\\t\\tinfo = tokenInfo(tokenAddress);\\n\\t\\tlimit = typeLimits[info.typeId];\\n\\t\\treturn (info, limit);\\n\\t}\\n\\n\\tfunction calcMaxWithdraw(address token) public view override returns (uint256 maxWithdraw) {\\n\\t\\t(TokenInfo memory info, Limits memory limits) = getInfoAndLimits(token);\\n\\t\\treturn _calcMaxWithdraw(info, limits);\\n\\t}\\n\\n\\tfunction _calcMaxWithdraw(TokenInfo memory info, Limits memory limits) private view returns (uint256 maxWithdraw) {\\n\\t\\t// solium-disable-next-line security/no-block-members\\n\\t\\tif (block.timestamp > info.lastDay + 24 hours) { // solhint-disable-line not-rely-on-time\\n\\t\\t\\tinfo.spentToday = 0;\\n\\t\\t}\\n\\t\\tif (limits.daily <= info.spentToday) {\\n\\t\\t\\treturn 0;\\n\\t\\t}\\n\\t\\tmaxWithdraw = limits.daily - info.spentToday;\\n\\t\\tif (maxWithdraw > limits.max) {\\n\\t\\t\\tmaxWithdraw = limits.max;\\n\\t\\t}\\n\\t\\treturn maxWithdraw;\\n\\t}\\n\\n\\tfunction updateTokenTransfer(address token, uint256 amount) override external onlyPrimary {\\n\\t\\t(TokenInfo memory info, Limits memory limit) = getInfoAndLimits(token);\\n\\t\\trequire(isTokenAllowed(token), \\\"AllowTokens: Not whitelisted\\\");\\n\\t\\trequire(amount >= limit.min, \\\"AllowTokens: Lower than limit\\\");\\n\\n\\t\\t// solium-disable-next-line security/no-block-members\\n\\t\\tif (block.timestamp > info.lastDay + 24 hours) { // solhint-disable-line not-rely-on-time\\n\\t\\t\\t// solium-disable-next-line security/no-block-members\\n\\t\\t\\tinfo.lastDay = block.timestamp; // solhint-disable-line not-rely-on-time\\n\\t\\t\\tinfo.spentToday = 0;\\n\\t\\t}\\n\\t\\tuint maxWithdraw = _calcMaxWithdraw(info, limit);\\n\\t\\trequire(amount <= maxWithdraw, \\\"AllowTokens: Exceeded limit\\\");\\n\\t\\tinfo.spentToday = info.spentToday.add(amount);\\n\\t\\tsetTokenInfoByTokenAddress(token, info);\\n\\n\\t\\temit UpdateTokensTransfered(token, info.lastDay, info.spentToday);\\n\\t}\\n\\n\\tfunction _addTokenType(string memory description, Limits memory limits) private returns(uint256 len) {\\n\\t\\trequire(bytes(description).length > 0, \\\"AllowTokens: Empty description\\\");\\n\\t\\tlen = typeDescriptions.length;\\n\\t\\trequire(len + 1 <= MAX_TYPES, \\\"AllowTokens: Reached MAX_TYPES\\\");\\n\\t\\ttypeDescriptions.push(description);\\n\\t\\t_setTypeLimits(len, limits);\\n\\t\\temit TokenTypeAdded(len, description);\\n\\t\\treturn len;\\n\\t}\\n\\n\\tfunction addTokenType(string calldata description, Limits calldata limits) external onlyOwner returns(uint256 len) {\\n\\t\\treturn _addTokenType(description, limits);\\n\\t}\\n\\n\\tfunction _setTypeLimits(uint256 typeId, Limits memory limits) private {\\n\\t\\trequire(typeId < typeDescriptions.length, \\\"AllowTokens: bigger than typeDescriptions\\\");\\n\\t\\trequire(limits.max >= limits.min, \\\"AllowTokens: maxTokens smaller than minTokens\\\");\\n\\t\\trequire(limits.daily >= limits.max, \\\"AllowTokens: dailyLimit smaller than maxTokens\\\");\\n\\t\\trequire(limits.mediumAmount > limits.min, \\\"AllowTokens: limits.mediumAmount smaller than min\\\");\\n\\t\\trequire(limits.largeAmount > limits.mediumAmount, \\\"AllowTokens: limits.largeAmount smaller than mediumAmount\\\");\\n\\t\\ttypeLimits[typeId] = limits;\\n\\t\\temit TypeLimitsChanged(typeId, limits);\\n\\t}\\n\\n\\tfunction setTypeLimits(uint256 typeId, Limits memory limits) public onlyOwner {\\n\\t\\t_setTypeLimits(typeId, limits);\\n\\t}\\n\\n\\tfunction getTypesLimits() external view override returns(Limits[] memory limits) {\\n\\t\\tlimits = new Limits[](typeDescriptions.length);\\n\\t\\tfor (uint256 i = 0; i < typeDescriptions.length; i++) {\\n\\t\\t\\tlimits[i] = typeLimits[i];\\n\\t\\t}\\n\\t\\treturn limits;\\n\\t}\\n\\n\\tfunction getTypeDescriptionsLength() external view override returns(uint256) {\\n\\t\\treturn typeDescriptions.length;\\n\\t}\\n\\n\\tfunction getTypeDescriptions() external view override returns(string[] memory descriptions) {\\n\\t\\tdescriptions = new string[](typeDescriptions.length);\\n\\t\\tfor (uint256 i = 0; i < typeDescriptions.length; i++) {\\n\\t\\t\\tdescriptions[i] = typeDescriptions[i];\\n\\t\\t}\\n\\t\\treturn descriptions;\\n\\t}\\n\\n\\tfunction isTokenAllowed(address token) public view notNull(token) override returns (bool) {\\n\\t\\treturn tokenInfo(token).allowed;\\n\\t}\\n\\n\\tfunction setToken(address token, uint256 typeId) override public notNull(token) {\\n\\t\\trequire(isOwner() || _msgSender() == primary(), \\\"AllowTokens: unauthorized sender\\\");\\n\\t\\trequire(typeId < typeDescriptions.length, \\\"AllowTokens: typeId does not exist\\\");\\n\\t\\tTokenInfo memory info = tokenInfo(token);\\n\\t\\tinfo.allowed = true;\\n\\t\\tinfo.typeId = typeId;\\n\\t\\tsetTokenInfoByTokenAddress(token, info);\\n\\t\\temit SetToken(token, typeId);\\n\\t}\\n\\n\\tfunction setMultipleTokens(TokensAndType[] calldata tokensAndTypes) external onlyOwner {\\n\\t\\trequire(tokensAndTypes.length > 0, \\\"AllowTokens: empty tokens\\\");\\n\\t\\tfor(uint256 i = 0; i < tokensAndTypes.length; i = i + 1) {\\n\\t\\t\\tsetToken(tokensAndTypes[i].token, tokensAndTypes[i].typeId);\\n\\t\\t}\\n\\t}\\n\\n\\tfunction removeAllowedToken(address token) external notNull(token) onlyOwner {\\n\\t\\tTokenInfo memory info = tokenInfo(token);\\n\\t\\trequire(info.allowed, \\\"AllowTokens: Not Allowed\\\");\\n\\t\\tinfo.allowed = false;\\n\\t\\tsetTokenInfoByTokenAddress(token, info);\\n\\t\\temit AllowedTokenRemoved(token);\\n\\t}\\n\\n\\tfunction setConfirmations(\\n\\t\\tuint256 _smallAmountConfirmations,\\n\\t\\tuint256 _mediumAmountConfirmations,\\n\\t\\tuint256 _largeAmountConfirmations) external onlyOwner {\\n\\t\\t_setConfirmations(_smallAmountConfirmations, _mediumAmountConfirmations, _largeAmountConfirmations);\\n\\t}\\n\\n\\tfunction _setConfirmations(\\n\\t\\tuint256 _smallAmountConfirmations,\\n\\t\\tuint256 _mediumAmountConfirmations,\\n\\t\\tuint256 _largeAmountConfirmations) private {\\n\\t\\trequire(_smallAmountConfirmations <= _mediumAmountConfirmations, \\\"AllowTokens: small bigger than medium confirmations\\\");\\n\\t\\trequire(_mediumAmountConfirmations <= _largeAmountConfirmations, \\\"AllowTokens: medium bigger than large confirmations\\\");\\n\\t\\tsmallAmountConfirmations = _smallAmountConfirmations;\\n\\t\\tmediumAmountConfirmations = _mediumAmountConfirmations;\\n\\t\\tlargeAmountConfirmations = _largeAmountConfirmations;\\n\\t\\temit ConfirmationsChanged(_smallAmountConfirmations, _mediumAmountConfirmations, _largeAmountConfirmations);\\n\\t}\\n\\n\\tfunction getConfirmations() external view override\\n\\t\\treturns (\\n\\t\\tuint256 smallAmount,\\n\\t\\tuint256 mediumAmount,\\n\\t\\tuint256 largeAmount\\n\\t) {\\n\\t\\treturn (smallAmountConfirmations, mediumAmountConfirmations, largeAmountConfirmations);\\n\\t}\\n\\n}\\n\",\"keccak256\":\"0x5d8f60e6c272465d54e138fde82b884891823c76e145420651f151610d4b5a23\",\"license\":\"MIT\"},\"contracts/interface/IAllowTokens.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\npragma abicoder v2;\\ninterface IAllowTokens {\\n\\n\\tstruct Limits {\\n\\t\\tuint256 min;\\n\\t\\tuint256 max;\\n\\t\\tuint256 daily;\\n\\t\\tuint256 mediumAmount;\\n\\t\\tuint256 largeAmount;\\n\\t}\\n\\n\\tstruct TokenInfo {\\n\\t\\tbool allowed;\\n\\t\\tuint256 typeId;\\n\\t\\tuint256 spentToday;\\n\\t\\tuint256 lastDay;\\n\\t}\\n\\n\\tstruct TypeInfo {\\n\\t\\tstring description;\\n\\t\\tLimits limits;\\n\\t}\\n\\n\\tstruct TokensAndType {\\n\\t\\taddress token;\\n\\t\\tuint256 typeId;\\n\\t}\\n\\n\\tfunction version() external pure returns (string memory);\\n\\n\\tfunction getInfoAndLimits(address token) external view returns (TokenInfo memory info, Limits memory limit);\\n\\n\\tfunction calcMaxWithdraw(address token) external view returns (uint256 maxWithdraw);\\n\\n\\tfunction getTypesLimits() external view returns(Limits[] memory limits);\\n\\n\\tfunction getTypeDescriptionsLength() external view returns(uint256);\\n\\n\\tfunction getTypeDescriptions() external view returns(string[] memory descriptions);\\n\\n\\tfunction setToken(address token, uint256 typeId) external;\\n\\n\\tfunction getConfirmations() external view returns (uint256 smallAmount, uint256 mediumAmount, uint256 largeAmount);\\n\\n\\tfunction isTokenAllowed(address token) external view returns (bool);\\n\\n\\tfunction updateTokenTransfer(address token, uint256 amount) external;\\n}\",\"keccak256\":\"0x7a68f098e5efaad2d9d84314b2df76897fa9dbbe65c64d629b02b1dc4d9d36b5\",\"license\":\"MIT\"},\"contracts/zeppelin/GSN/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\npragma abicoder v2;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract  Context {\\n\\n    function _msgSender() internal view returns (address payable) {\\n        return payable(msg.sender);\\n    }\\n\\n    function _msgData() internal view returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x6f3f274a2270bfe073339370edfa2485e2d515a2656039937f6b972fae96d297\",\"license\":\"MIT\"},\"contracts/zeppelin/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\npragma abicoder v2;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     * - Subtraction cannot overflow.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        // Solidity only automatically asserts when dividing by 0\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * Reverts with custom message when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     * - The divisor cannot be zero.\\n     *\\n     * _Available since v2.4.0._\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0x8038a6eca31e013b0c7f248c7a4eb5846ab0d52bb3f7636fafcf00b075643afe\",\"license\":\"MIT\"},\"contracts/zeppelin/upgradable/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\npragma abicoder v2;\\n\\n/**\\n * @title Initializable\\n *\\n * @dev Helper contract to support initializer functions. To use it, replace\\n * the constructor with a function that has the `initializer` modifier.\\n * WARNING: Unlike constructors, initializer functions must be manually\\n * invoked. This applies both to deploying an Initializable contract, as well\\n * as extending an Initializable contract via inheritance.\\n * WARNING: When used with inheritance, manual care must be taken to not invoke\\n * a parent initializer twice, or ensure that all initializers are idempotent,\\n * because this is not dealt with automatically as with constructors.\\n */\\ncontract Initializable {\\n\\n  /**\\n   * @dev Indicates that the contract has been initialized.\\n   */\\n  bool private initialized;\\n\\n  /**\\n   * @dev Indicates that the contract is in the process of being initialized.\\n   */\\n  bool private initializing;\\n\\n  /**\\n   * @dev Modifier to use in the initializer function of a contract.\\n   */\\n  modifier initializer() {\\n    require(initializing || !initialized, \\\"Contract instance is already initialized\\\");\\n\\n    bool isTopLevelCall = !initializing;\\n    if (isTopLevelCall) {\\n      initializing = true;\\n      initialized = true;\\n    }\\n\\n    _;\\n\\n    if (isTopLevelCall) {\\n      initializing = false;\\n    }\\n  }\\n\\n  // Reserved storage space to allow for layout changes in the future.\\n  uint256[50] private ______gap;\\n}\",\"keccak256\":\"0x14063a689bff5eecf0f36cb519feb575f60349ecf0d425ead5b931b77dd599d4\",\"license\":\"MIT\"},\"contracts/zeppelin/upgradable/ownership/UpgradableOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\npragma abicoder v2;\\n\\nimport \\\"../Initializable.sol\\\";\\n\\nimport \\\"../../GSN/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be aplied to your functions to restrict their use to\\n * the owner.\\n */\\ncontract UpgradableOwnable is Initializable, Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function initialize(address sender) public initializer {\\n        _owner = sender;\\n        emit OwnershipTransferred(address(0), _owner);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(isOwner(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the caller is the current owner.\\n     */\\n    function isOwner() public view returns (bool) {\\n        return _msgSender() == _owner;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * > Note: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public onlyOwner {\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     */\\n    function _transferOwnership(address newOwner) internal {\\n        require(newOwner != address(0), \\\"Ownable: new owner is zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n\\n}\\n\",\"keccak256\":\"0xdf439a167ae82e7e3dd241ea0c831a1bb0329432ceb4fa889778d1f2d196ce00\",\"license\":\"MIT\"},\"contracts/zeppelin/upgradable/ownership/UpgradableSecondary.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\npragma abicoder v2;\\n\\nimport \\\"../Initializable.sol\\\";\\n\\nimport \\\"../../GSN/Context.sol\\\";\\n\\n/**\\n * @dev A Secondary contract can only be used by its primary account (the one that created it).\\n */\\ncontract UpgradableSecondary is Initializable, Context {\\n    address private _primary;\\n\\n    /**\\n     * @dev Emitted when the primary contract changes.\\n     */\\n    event PrimaryTransferred(\\n        address recipient\\n    );\\n\\n    /**\\n     * @dev Sets the primary account to the one that is creating the Secondary contract.\\n     */\\n    function __Secondary_init(address sender) public initializer {\\n        _primary = sender;\\n        emit PrimaryTransferred(_primary);\\n    }\\n\\n    /**\\n     * @dev Reverts if called from any account other than the primary.\\n     */\\n    modifier onlyPrimary() {\\n        require(_msgSender() == _primary, \\\"Secondary: caller is not the primary account\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @return the address of the primary.\\n     */\\n    function primary() public view returns (address) {\\n        return _primary;\\n    }\\n\\n    /**\\n     * @dev Transfers contract to a new primary.\\n     * @param recipient The address of new primary.\\n     */\\n    function transferPrimary(address recipient) public onlyPrimary {\\n        require(recipient != address(0), \\\"Secondary: new primary is the zero address\\\");\\n        _primary = recipient;\\n        emit PrimaryTransferred(recipient);\\n    }\\n\\n}\",\"keccak256\":\"0x3dc61c8d0ab62fff2c3d1c56a5e2dbb20be7d0a11947463d86572afec5a1fe27\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506124e5806100206000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80638f32d59b1161011a578063c4d66de8116100ad578063e4f89ae41161007c578063e4f89ae414610493578063e744092e146104a6578063f2fde38b14610501578063f5dab71114610514578063f9eaee0d1461053457600080fd5b8063c4d66de814610454578063c6dbdf6114610467578063d4164b5d14610478578063d7516faa1461048b57600080fd5b8063adfeb5eb116100e9578063adfeb5eb146103f7578063b348a29f1461040a578063bb698dad1461041d578063c361ce831461043057600080fd5b80638f32d59b1461039b57806390469a9d146103ba5780639d27d226146103cd578063a81a8b1f146103ee57600080fd5b806354fd4d50116101925780637d496be9116101615780637d496be9146103515780638c34bc551461035a5780638da5cb5b1461036d5780638de52dd71461039257600080fd5b806354fd4d5014610305578063601ad4c914610323578063715018a61461033657806378bf2b531461033e57600080fd5b8063250540cf116101ce578063250540cf146102b55780633777804f146102c857806353a8b574146102dd578063545d4f8b146102f257600080fd5b806307fc9eb9146102005780630a9763d71461026a5780631c21a08f146102805780632348238c146102a0575b600080fd5b61023d61020e366004611bc9565b603660205260009081526040902080546001820154600283015460038401546004909401549293919290919085565b604080519586526020860194909452928401919091526060830152608082015260a0015b60405180910390f35b61027260fa81565b604051908152602001610261565b61029361028e366004611bc9565b610547565b6040516102619190611c2f565b6102b36102ae366004611c5e565b6105f3565b005b6102726102c3366004611c5e565b6106ec565b6102d0610710565b6040516102619190611c79565b6102e5610824565b6040516102619190611cf2565b6102b3610300366004611dc2565b61095a565b604080518082019091526002815261763160f01b6020820152610293565b6102b3610331366004611e59565b610a15565b6102b3610a4f565b6102b361034c366004611e85565b610ac3565b61027260395481565b6102b3610368366004611e85565b610c20565b6033546001600160a01b03165b6040516001600160a01b039091168152602001610261565b61027260385481565b6033546001600160a01b031633145b6040519015158152602001610261565b6102b36103c8366004611c5e565b610dfe565b6103e06103db366004611c5e565b610ef2565b604051610261929190611eaf565b61027260375481565b6102b3610405366004611c5e565b610fb7565b6102b3610418366004611f7a565b611075565b61027261042b366004611fa7565b6110a9565b60375460385460395460408051938452602084019290925290820152606001610261565b6102b3610462366004611c5e565b61112e565b6034546001600160a01b031661037a565b6102b3610486366004612035565b6111e3565b603a54610272565b6102b36104a136600461220e565b6112d6565b6104df6104b4366004611c5e565b603560205260009081526040902080546001820154600283015460039093015460ff90921692909184565b6040805194151585526020850193909352918301526060820152608001610261565b6102b361050f366004611c5e565b6113b6565b610527610522366004611c5e565b6113ec565b6040516102619190612282565b6103aa610542366004611c5e565b61146c565b603a818154811061055757600080fd5b906000526020600020016000915090508054610572906122af565b80601f016020809104026020016040519081016040528092919081815260200182805461059e906122af565b80156105eb5780601f106105c0576101008083540402835291602001916105eb565b820191906000526020600020905b8154815290600101906020018083116105ce57829003601f168201915b505050505081565b6034546001600160a01b0316336001600160a01b03161461062f5760405162461bcd60e51b8152600401610626906122e4565b60405180910390fd5b6001600160a01b0381166106985760405162461bcd60e51b815260206004820152602a60248201527f5365636f6e646172793a206e6577207072696d61727920697320746865207a65604482015269726f206164647265737360b01b6064820152608401610626565b603480546001600160a01b0319166001600160a01b0383169081179091556040519081527f4101e71e974f68df5e9730cc223280b41654676bbb052cdcc735c3337e64d2d99060200160405180910390a150565b60008060006106fa84610ef2565b9150915061070882826114a8565b949350505050565b603a546060906001600160401b0381111561072d5761072d611d54565b60405190808252806020026020018201604052801561079057816020015b61077d6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b81526020019060019003908161074b5790505b50905060005b603a5481101561082057603660008281526020019081526020016000206040518060a00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152505082828151811061080257610802612330565b602002602001018190525080806108189061235c565b915050610796565b5090565b603a546060906001600160401b0381111561084157610841611d54565b60405190808252806020026020018201604052801561087457816020015b606081526020019060019003908161085f5790505b50905060005b603a5481101561082057603a818154811061089757610897612330565b9060005260206000200180546108ac906122af565b80601f01602080910402602001604051908101604052809291908181526020018280546108d8906122af565b80156109255780601f106108fa57610100808354040283529160200191610925565b820191906000526020600020905b81548152906001019060200180831161090857829003601f168201915b505050505082828151811061093c5761093c612330565b602002602001018190525080806109529061235c565b91505061087a565b6033546001600160a01b031633148061097d57506034546001600160a01b031633145b6109c95760405162461bcd60e51b815260206004820181905260248201527f416c6c6f77546f6b656e733a20756e617574686f72697a65642073656e6465726044820152606401610626565b6001600160a01b03919091166000908152603560209081526040918290208351815460ff1916901515178155908301516001820155908201516002820155606090910151600390910155565b6033546001600160a01b03163314610a3f5760405162461bcd60e51b815260040161062690612377565b610a4a838383611512565b505050565b6033546001600160a01b03163314610a795760405162461bcd60e51b815260040161062690612377565b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b816001600160a01b038116610aea5760405162461bcd60e51b8152600401610626906123ac565b6033546001600160a01b0316331480610b0d57506034546001600160a01b031633145b610b595760405162461bcd60e51b815260206004820181905260248201527f416c6c6f77546f6b656e733a20756e617574686f72697a65642073656e6465726044820152606401610626565b603a548210610bb55760405162461bcd60e51b815260206004820152602260248201527f416c6c6f77546f6b656e733a2074797065496420646f6573206e6f74206578696044820152611cdd60f21b6064820152608401610626565b6000610bc0846113ec565b60018152602081018490529050610bd7848261095a565b836001600160a01b03167f720764556647dd167f4229d6a4255ac86018e302a50fc29dd67a70edb7b314d084604051610c1291815260200190565b60405180910390a250505050565b6034546001600160a01b0316336001600160a01b031614610c535760405162461bcd60e51b8152600401610626906122e4565b600080610c5f84610ef2565b91509150610c6c8461146c565b610cb85760405162461bcd60e51b815260206004820152601c60248201527f416c6c6f77546f6b656e733a204e6f742077686974656c6973746564000000006044820152606401610626565b8051831015610d095760405162461bcd60e51b815260206004820152601d60248201527f416c6c6f77546f6b656e733a204c6f776572207468616e206c696d69740000006044820152606401610626565b6060820151610d1b90620151806123e3565b421115610d3057426060830152600060408301525b6000610d3c83836114a8565b905080841115610d8e5760405162461bcd60e51b815260206004820152601b60248201527f416c6c6f77546f6b656e733a204578636565646564206c696d697400000000006044820152606401610626565b6040830151610d9d908561163f565b6040840152610dac858461095a565b6060830151604080850151815192835260208301526001600160a01b038716917f84480cc6a063ffd72c3eddf21e3ffd30db3e2b8e386ec3abf09c98ee9e0e8d34910160405180910390a25050505050565b806001600160a01b038116610e255760405162461bcd60e51b8152600401610626906123ac565b6033546001600160a01b03163314610e4f5760405162461bcd60e51b815260040161062690612377565b6000610e5a836113ec565b8051909150610eab5760405162461bcd60e51b815260206004820152601860248201527f416c6c6f77546f6b656e733a204e6f7420416c6c6f77656400000000000000006044820152606401610626565b60008152610eb9838261095a565b6040516001600160a01b038416907fbf996b4fd74f0c7159bb017b1db415b0d9a6f13129f46d0b93309d170b78df3190600090a2505050565b610f1f60405180608001604052806000151581526020016000815260200160008152602001600081525090565b610f516040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b610f5a836113ec565b915060366000836020015181526020019081526020016000206040518060a0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815250509050915091565b600054610100900460ff1680610fd0575060005460ff16155b610fec5760405162461bcd60e51b8152600401610626906123fb565b600054610100900460ff1615801561100e576000805461ffff19166101011790555b603480546001600160a01b0319166001600160a01b0384169081179091556040519081527f4101e71e974f68df5e9730cc223280b41654676bbb052cdcc735c3337e64d2d99060200160405180910390a18015611071576000805461ff00191690555b5050565b6033546001600160a01b0316331461109f5760405162461bcd60e51b815260040161062690612377565b611071828261169e565b6033546000906001600160a01b031633146110d65760405162461bcd60e51b815260040161062690612377565b61112484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061111f9250505036859003850185612443565b61193f565b90505b9392505050565b600054610100900460ff1680611147575060005460ff16155b6111635760405162461bcd60e51b8152600401610626906123fb565b600054610100900460ff16158015611185576000805461ffff19166101011790555b603380546001600160a01b0319166001600160a01b0384169081179091556040516000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a38015611071576000805461ff00191690555050565b600054610100900460ff16806111fc575060005460ff16155b6112185760405162461bcd60e51b8152600401610626906123fb565b600054610100900460ff1615801561123a576000805461ffff19166101011790555b6112438761112e565b61124c86610fb7565b611257858585611512565b60005b82518110156112ba576112a783828151811061127857611278612330565b60200260200101516000015184838151811061129657611296612330565b60200260200101516020015161193f565b506112b38160016123e3565b905061125a565b5080156112cd576000805461ff00191690555b50505050505050565b6033546001600160a01b031633146113005760405162461bcd60e51b815260040161062690612377565b8061134d5760405162461bcd60e51b815260206004820152601960248201527f416c6c6f77546f6b656e733a20656d70747920746f6b656e73000000000000006044820152606401610626565b60005b81811015610a4a576113a483838381811061136d5761136d612330565b6113839260206040909202019081019150611c5e565b84848481811061139557611395612330565b90506040020160200135610ac3565b6113af8160016123e3565b9050611350565b6033546001600160a01b031633146113e05760405162461bcd60e51b815260040161062690612377565b6113e981611a7c565b50565b61141960405180608001604052806000151581526020016000815260200160008152602001600081525090565b506001600160a01b03166000908152603560209081526040918290208251608081018452815460ff1615158152600182015492810192909252600281015492820192909252600390910154606082015290565b6000816001600160a01b0381166114955760405162461bcd60e51b8152600401610626906123ac565b61149e836113ec565b5191505b50919050565b60008260600151620151806114bd91906123e3565b4211156114cc57600060408401525b82604001518260400151116114e35750600061150c565b826040015182604001516114f7919061245f565b9050816020015181111561150c575060208101515b92915050565b8183111561157e5760405162461bcd60e51b815260206004820152603360248201527f416c6c6f77546f6b656e733a20736d616c6c20626967676572207468616e206d604482015272656469756d20636f6e6669726d6174696f6e7360681b6064820152608401610626565b808211156115ea5760405162461bcd60e51b815260206004820152603360248201527f416c6c6f77546f6b656e733a206d656469756d20626967676572207468616e206044820152726c6172676520636f6e6669726d6174696f6e7360681b6064820152608401610626565b60378390556038829055603981905560408051848152602081018490529081018290527ffcc55d4aea72e6d2d439843942c59b3141c952375a217e381f6a40e0b5ac42199060600160405180910390a1505050565b60008061164c83856123e3565b9050838110156111275760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006044820152606401610626565b603a5482106117015760405162461bcd60e51b815260206004820152602960248201527f416c6c6f77546f6b656e733a20626967676572207468616e20747970654465736044820152686372697074696f6e7360b81b6064820152608401610626565b80516020820151101561176c5760405162461bcd60e51b815260206004820152602d60248201527f416c6c6f77546f6b656e733a206d6178546f6b656e7320736d616c6c6572207460448201526c68616e206d696e546f6b656e7360981b6064820152608401610626565b8060200151816040015110156117db5760405162461bcd60e51b815260206004820152602e60248201527f416c6c6f77546f6b656e733a206461696c794c696d697420736d616c6c65722060448201526d7468616e206d6178546f6b656e7360901b6064820152608401610626565b80516060820151116118495760405162461bcd60e51b815260206004820152603160248201527f416c6c6f77546f6b656e733a206c696d6974732e6d656469756d416d6f756e746044820152701039b6b0b63632b9103a3430b71036b4b760791b6064820152608401610626565b80606001518160800151116118c65760405162461bcd60e51b815260206004820152603960248201527f416c6c6f77546f6b656e733a206c696d6974732e6c61726765416d6f756e742060448201527f736d616c6c6572207468616e206d656469756d416d6f756e74000000000000006064820152608401610626565b600082815260366020908152604091829020835181559083015160018201558183015160028201556060830151600382015560808301516004909101555182907f1d2b256bb06ebc298b1980410a5e3b1e9bc4be642e8f26a58dc8a97d7fe2bbbb90611933908490612476565b60405180910390a25050565b6000808351116119915760405162461bcd60e51b815260206004820152601e60248201527f416c6c6f77546f6b656e733a20456d707479206465736372697074696f6e00006044820152606401610626565b50603a5460fa6119a28260016123e3565b11156119f05760405162461bcd60e51b815260206004820152601e60248201527f416c6c6f77546f6b656e733a2052656163686564204d41585f545950455300006044820152606401610626565b603a80546001810182556000919091528351611a33917fa2999d817b6757290b50e8ecf3fa939673403dd35c97de392fdb343b4015ce9e01906020860190611b39565b50611a3e818361169e565b807fb30844b47136a66c1307afd352145423a1c237692b6ba474578f06f4614b35a084604051611a6e9190611c2f565b60405180910390a292915050565b6001600160a01b038116611add5760405162461bcd60e51b815260206004820152602260248201527f4f776e61626c653a206e6577206f776e6572206973207a65726f206164647265604482015261737360f01b6064820152608401610626565b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b828054611b45906122af565b90600052602060002090601f016020900481019282611b675760008555611bad565b82601f10611b8057805160ff1916838001178555611bad565b82800160010185558215611bad579182015b82811115611bad578251825591602001919060010190611b92565b506108209291505b808211156108205760008155600101611bb5565b600060208284031215611bdb57600080fd5b5035919050565b6000815180845260005b81811015611c0857602081850181015186830182015201611bec565b81811115611c1a576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006111276020830184611be2565b80356001600160a01b0381168114611c5957600080fd5b919050565b600060208284031215611c7057600080fd5b61112782611c42565b6020808252825182820181905260009190848201906040850190845b81811015611ce657611cd383855180518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b9284019260a09290920191600101611c95565b50909695505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611d4757603f19888603018452611d35858351611be2565b94509285019290850190600101611d19565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b0381118282101715611d8c57611d8c611d54565b60405290565b604051601f8201601f191681016001600160401b0381118282101715611dba57611dba611d54565b604052919050565b60008082840360a0811215611dd657600080fd5b611ddf84611c42565b92506080601f1982011215611df357600080fd5b50604051608081018181106001600160401b0382111715611e1657611e16611d54565b60405260208401358015158114611e2c57600080fd5b80825250604084013560208201526060840135604082015260808401356060820152809150509250929050565b600080600060608486031215611e6e57600080fd5b505081359360208301359350604090920135919050565b60008060408385031215611e9857600080fd5b611ea183611c42565b946020939093013593505050565b82511515815260208084015181830152604080850151818401526060808601518185015284516080808601919091529285015160a08501529084015160c084015283015160e08301528201516101008201526101208101611127565b600060a08284031215611f1d57600080fd5b60405160a081018181106001600160401b0382111715611f3f57611f3f611d54565b806040525080915082358152602083013560208201526040830135604082015260608301356060820152608083013560808201525092915050565b60008060c08385031215611f8d57600080fd5b82359150611f9e8460208501611f0b565b90509250929050565b600080600083850360c0811215611fbd57600080fd5b84356001600160401b0380821115611fd457600080fd5b818701915087601f830112611fe857600080fd5b813581811115611ff757600080fd5b88602082850101111561200957600080fd5b60209290920195509093505060a0601f198201121561202757600080fd5b506020840190509250925092565b60008060008060008060c0878903121561204e57600080fd5b61205787611c42565b955061206560208801611c42565b94506040870135935060608701359250608087013591506001600160401b0360a0880135111561209457600080fd5b60a0870135870188601f8201126120aa57600080fd5b6001600160401b03813511156120c2576120c2611d54565b6120d26020823560051b01611d92565b81358082526020808301929160051b8401018b10156120f057600080fd5b602083015b6020843560051b8501018110156121fd576001600160401b038135111561211b57600080fd5b8035840160c0818e03601f1901121561213357600080fd5b61213b611d6a565b6001600160401b036020830135111561215357600080fd5b8d603f60208401358401011261216857600080fd5b602080830135830101356001600160401b0381111561218957612189611d54565b61219c601f8201601f1916602001611d92565b8181528f60408360208701358701010111156121b757600080fd5b8160406020860135860101602083013760006020838301015280835250506121e28e60408401611f0b565b602082015280855250506020830192506020810190506120f5565b508093505050509295509295509295565b6000806020838503121561222157600080fd5b82356001600160401b038082111561223857600080fd5b818501915085601f83011261224c57600080fd5b81358181111561225b57600080fd5b8660208260061b850101111561227057600080fd5b60209290920196919550909350505050565b8151151581526020808301519082015260408083015190820152606080830151908201526080810161150c565b600181811c908216806122c357607f821691505b602082108114156114a257634e487b7160e01b600052602260045260246000fd5b6020808252602c908201527f5365636f6e646172793a2063616c6c6572206973206e6f74207468652070726960408201526b1b585c9e481858d8dbdd5b9d60a21b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561237057612370612346565b5060010190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526019908201527f416c6c6f77546f6b656e733a204e756c6c204164647265737300000000000000604082015260600190565b600082198211156123f6576123f6612346565b500190565b60208082526028908201527f436f6e747261637420696e7374616e636520697320616c726561647920696e696040820152671d1a585b1a5e995960c21b606082015260800190565b600060a0828403121561245557600080fd5b6111278383611f0b565b60008282101561247157612471612346565b500390565b60a0810161150c82848051825260208101516020830152604081015160408301526060810151606083015260808101516080830152505056fea2646970667358221220588bcd64f385196d7b218829dcee968e741eb45fcd6a03515f3e68378b16d70564736f6c63430008090033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "__Secondary_init(address)": {
        "details": "Sets the primary account to the one that is creating the Secondary contract."
      },
      "initialize(address)": {
        "details": "Initializes the contract setting the deployer as the initial owner."
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "primary()": {
        "returns": {
          "_0": "the address of the primary."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "transferPrimary(address)": {
        "details": "Transfers contract to a new primary.",
        "params": {
          "recipient": "The address of new primary."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 16199,
        "contract": "contracts/AllowTokens/AllowTokens.sol:AllowTokens",
        "label": "initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 16202,
        "contract": "contracts/AllowTokens/AllowTokens.sol:AllowTokens",
        "label": "initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 16242,
        "contract": "contracts/AllowTokens/AllowTokens.sol:AllowTokens",
        "label": "______gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 16488,
        "contract": "contracts/AllowTokens/AllowTokens.sol:AllowTokens",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 16621,
        "contract": "contracts/AllowTokens/AllowTokens.sol:AllowTokens",
        "label": "_primary",
        "offset": 0,
        "slot": "52",
        "type": "t_address"
      },
      {
        "astId": 32,
        "contract": "contracts/AllowTokens/AllowTokens.sol:AllowTokens",
        "label": "allowedTokens",
        "offset": 0,
        "slot": "53",
        "type": "t_mapping(t_address,t_struct(TokenInfo)7104_storage)"
      },
      {
        "astId": 37,
        "contract": "contracts/AllowTokens/AllowTokens.sol:AllowTokens",
        "label": "typeLimits",
        "offset": 0,
        "slot": "54",
        "type": "t_mapping(t_uint256,t_struct(Limits)7095_storage)"
      },
      {
        "astId": 39,
        "contract": "contracts/AllowTokens/AllowTokens.sol:AllowTokens",
        "label": "smallAmountConfirmations",
        "offset": 0,
        "slot": "55",
        "type": "t_uint256"
      },
      {
        "astId": 41,
        "contract": "contracts/AllowTokens/AllowTokens.sol:AllowTokens",
        "label": "mediumAmountConfirmations",
        "offset": 0,
        "slot": "56",
        "type": "t_uint256"
      },
      {
        "astId": 43,
        "contract": "contracts/AllowTokens/AllowTokens.sol:AllowTokens",
        "label": "largeAmountConfirmations",
        "offset": 0,
        "slot": "57",
        "type": "t_uint256"
      },
      {
        "astId": 46,
        "contract": "contracts/AllowTokens/AllowTokens.sol:AllowTokens",
        "label": "typeDescriptions",
        "offset": 0,
        "slot": "58",
        "type": "t_array(t_string_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(TokenInfo)7104_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct IAllowTokens.TokenInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(TokenInfo)7104_storage"
      },
      "t_mapping(t_uint256,t_struct(Limits)7095_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct IAllowTokens.Limits)",
        "numberOfBytes": "32",
        "value": "t_struct(Limits)7095_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Limits)7095_storage": {
        "encoding": "inplace",
        "label": "struct IAllowTokens.Limits",
        "members": [
          {
            "astId": 7086,
            "contract": "contracts/AllowTokens/AllowTokens.sol:AllowTokens",
            "label": "min",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 7088,
            "contract": "contracts/AllowTokens/AllowTokens.sol:AllowTokens",
            "label": "max",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 7090,
            "contract": "contracts/AllowTokens/AllowTokens.sol:AllowTokens",
            "label": "daily",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 7092,
            "contract": "contracts/AllowTokens/AllowTokens.sol:AllowTokens",
            "label": "mediumAmount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 7094,
            "contract": "contracts/AllowTokens/AllowTokens.sol:AllowTokens",
            "label": "largeAmount",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(TokenInfo)7104_storage": {
        "encoding": "inplace",
        "label": "struct IAllowTokens.TokenInfo",
        "members": [
          {
            "astId": 7097,
            "contract": "contracts/AllowTokens/AllowTokens.sol:AllowTokens",
            "label": "allowed",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 7099,
            "contract": "contracts/AllowTokens/AllowTokens.sol:AllowTokens",
            "label": "typeId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 7101,
            "contract": "contracts/AllowTokens/AllowTokens.sol:AllowTokens",
            "label": "spentToday",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 7103,
            "contract": "contracts/AllowTokens/AllowTokens.sol:AllowTokens",
            "label": "lastDay",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}